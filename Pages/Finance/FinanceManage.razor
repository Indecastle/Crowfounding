@page "/FinanceManage"
@using System.Security.Claims
@inject ApplicationDbContext _db;
@inject AuthenticationStateProvider AuthenticationStateProvider;
@inject UserManager<User> _userManager;
@inject NavigationManager NavigationManager
@inject IStringLocalizer<FinanceManage> L

@if (User != null)
{
    <UserMoneyAdd User="User" />
    <UserBonusesReceived User="User" />
}

@code {
    [Parameter]
    public User User { get; set; }
    private ClaimsPrincipal claimUser;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        claimUser = authState.User;
        User = await _db.User
            .Include(u => u.UserBonuses).ThenInclude(ub => ub.Company)
            .Include(u => u.UserBonuses).ThenInclude(ub => ub.Bonuse)
            .Include(u => u.UserBonuses).ThenInclude(ub => ub.TotalDonate)
            .SingleOrDefaultAsync(u => u.UserName == claimUser.Identity.Name);
        Console.WriteLine("kek");
        // User = await _userManager.GetUserAsync(claimUser);
    }
}
